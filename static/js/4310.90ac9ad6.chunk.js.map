{"version":3,"file":"static/js/4310.90ac9ad6.chunk.js","mappings":"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","sources":["webpack://conspectus/./src/pages/NotFound/NotFound.module.scss?532d","pages/NotFound/NotFound.tsx","webpack://conspectus/./src/components/UI/Post/Post.module.scss?2f4f","webpack://conspectus/./src/components/UI/PostNavigation/PostNavigation.module.scss?c46f","components/UI/PostNavigation/PostNavigation.tsx","hooks/useActiveHeading.ts","components/UI/Post/Post.tsx","webpack://conspectus/./src/pages/ContentPage/ContentPage.module.scss?07df","pages/ContentPage/ContentPage.tsx","data/DataProvider.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"NotFound\":\"NotFound_NotFound__IPBs5\",\"NotFoundCard\":\"NotFound_NotFoundCard__g+rwP\",\"NotFoundAlert\":\"NotFound_NotFoundAlert__0Ir1f\"};","// Не убирать default экспорт! Используется для ленивого импорта, именованный нужен для автогенерации тестов\nimport React from 'react';\nimport { Alert, Text, Card, Link } from '@gravity-ui/uikit';\nimport { NOT_FOUND } from 'src/constants';\nimport cls from './NotFound.module.scss';\n\ninterface NotFoundProps {\n  errorMessage?: string;\n}\n\nexport const NotFound = (props: NotFoundProps) => {\n  const { errorMessage } = props;\n  const message = errorMessage || NOT_FOUND;\n\n  return (\n    <div className={cls.NotFound}>\n      <Card\n        view=\"outlined\"\n        className={cls.NotFoundCard}\n        theme=\"warning\"\n      >\n        <Alert\n          theme=\"warning\"\n          title=\"Ошибка 404\"\n          message={message}\n          className={cls.NotFoundAlert}\n        />\n        <Text\n          variant=\"subheader-2\"\n          color=\"secondary\"\n        >\n          Попробуйте выбрать раздел из меню или вернуться на <Link href=\"/conspectus\">главную</Link>\n          .\n        </Text>\n      </Card>\n    </div>\n  );\n};\n\nexport default NotFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"Post\":\"Post_Post__2OxnI\",\"PostBlock\":\"Post_PostBlock__3pzc5\",\"PostBlockNav\":\"Post_PostBlockNav__MTmQs\",\"PostGrid\":\"Post_PostGrid__P+wi7\",\"PostAlert\":\"Post_PostAlert__hPyP3\"};","// extracted by mini-css-extract-plugin\nexport default {\"PostNavigation\":\"PostNavigation_PostNavigation__vV0HX\",\"active\":\"PostNavigation_active__hYYLa\"};","import React, { useState } from 'react';\n\nimport { Link, Text } from '@gravity-ui/uikit';\n\nimport cls from './PostNavigation.module.scss';\nimport { apiGetH2Id } from 'src/data/Api';\nimport { useActiveHeading } from 'src/hooks/useActiveHeading';\n\ninterface PostNavigationProps {\n  heads: string[];\n  pageTitle: string;\n  postBlockRef: React.RefObject<HTMLDivElement>;\n}\n\nexport const PostNavigation = (props: PostNavigationProps) => {\n  const { heads, pageTitle, postBlockRef } = props;\n  if (!heads.length) return null;\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const activeIndex = useActiveHeading(heads, postBlockRef, selectedIndex, setSelectedIndex);\n\n  return (\n    <nav\n      className={cls.PostNavigation}\n      aria-label=\"Навигация по статье\"\n    >\n      <Text\n        variant=\"subheader-1\"\n        color={'info'}\n      >\n        {pageTitle}\n      </Text>\n      <ul>\n        {heads.map((text, index) => (\n          <li\n            key={index + 1}\n            className={index === activeIndex ? cls.active : ''}\n          >\n            <Link\n              href={`#${apiGetH2Id(index)}`}\n              onClick={() => setSelectedIndex(index)}\n            >\n              {text}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const useActiveHeading = (\n  heads: string[],\n  scrollRef: React.RefObject<HTMLElement>,\n  selectedIndex: number,\n  setSelectedIndex: (idx: number) => void\n) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  useEffect(() => {\n    const container = scrollRef.current;\n    if (!container || !heads.length) return;\n\n    const handleScroll = () => {\n      // На любом скролле — сбрасываем selectedIndex\n      setSelectedIndex(-1);\n\n      //Собираем позиции заголовков относительно контейнера\n      const offsets = heads.map((_, idx) => {\n        const elem = container.querySelector(`#h2-${idx}`) as HTMLElement | null;\n        return elem\n          ? elem.getBoundingClientRect().top - container.getBoundingClientRect().top\n          : Infinity;\n      });\n\n      //  Находим максимальный заголовок, который не выше верха области (или близко к нему)\n      const threshold = 20; //  определяет \"насколько выше\" может быть активный раздел\n\n      let current = 0;\n      for (let i = 0; i < offsets.length; i++) {\n        if (offsets[i] - threshold <= 0) {\n          current = i;\n        }\n      }\n\n      // Если дошли до самого низа — всегда подсвечиваем последний пункт\n      if (Math.abs(container.scrollHeight - container.scrollTop - container.clientHeight) < 2) {\n        current = heads.length - 1;\n      }\n      setActiveIndex(current);\n    };\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    handleScroll();\n\n    return () => container.removeEventListener('scroll', handleScroll);\n  }, [heads, scrollRef, selectedIndex, setSelectedIndex]);\n\n  return selectedIndex !== -1 ? selectedIndex : activeIndex;\n};\n","import 'highlight.js/scss/default.scss';\n\nimport hljs from 'highlight.js/lib/core';\nimport bash from 'highlight.js/lib/languages/bash';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport json from 'highlight.js/lib/languages/json';\nimport python from 'highlight.js/lib/languages/python';\nimport xml from 'highlight.js/lib/languages/xml';\nimport Markdown from 'markdown-to-jsx';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\n\nimport { Link, Alert } from '@gravity-ui/uikit';\n\nimport cls from './Post.module.scss';\nimport { apiGetHeadsArray, apiGetTitleFromPost } from 'src/data/Api';\nimport { PostNavigation } from 'src/components/UI/PostNavigation/PostNavigation';\nimport { NO_CONTENT } from 'src/constants';\n\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('xml', xml);\nhljs.registerLanguage('json', json);\nhljs.registerLanguage('bash', bash);\nhljs.registerLanguage('python', python);\n\nexport interface TypePostProps {\n  post: string;\n}\n\nexport const Post = (props: TypePostProps) => {\n  const { post } = props;\n  const postRef = useRef<HTMLDivElement | null>(null);\n  const [heads, setHeads] = useState<Array<string>>([]);\n\n  useLayoutEffect(() => {\n    const postElement: HTMLElement | null = postRef.current;\n    if (postElement) {\n      const codeBlocks = postElement.querySelectorAll('pre code');\n      codeBlocks.forEach((block) => {\n        hljs.highlightElement(block as HTMLElement);\n      });\n      setHeads(apiGetHeadsArray(postElement));\n    }\n  }, [post, postRef]);\n\n  if (!post)\n    return (\n      <Alert\n        theme=\"warning\"\n        message={NO_CONTENT}\n        className={cls.PostAlert}\n      />\n    );\n\n  const postBlockRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <article\n      ref={postRef}\n      className={cls.PostGrid}\n    >\n      <div\n        ref={postBlockRef}\n        className={cls.PostBlock}\n      >\n        <Markdown\n          options={{\n            overrides: {\n              a: {\n                component: Link,\n                props: {\n                  view: 'normal',\n                  target: '_blank',\n                },\n              },\n            },\n          }}\n        >\n          {post}\n        </Markdown>\n      </div>\n      <PostNavigation\n        heads={heads}\n        pageTitle={apiGetTitleFromPost(post)}\n        postBlockRef={postBlockRef}\n      />\n    </article>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContentPage\":\"ContentPage_ContentPage__kqsnq\"};","// Не убирать default экспорт! Используется для ленивого импорта, именованный нужен для автогенерации тестов\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useAppContext } from 'src/app/AppContext/AppContextProvider';\nimport { DataProvider } from 'src/data/DataProvider';\nimport { apiGetNavItemByPath } from 'src/data/Api';\n\nimport { Post } from 'src/components/UI/Post/Post';\nimport { NotFound } from 'src/pages/NotFound/NotFound';\n\nimport cls from './ContentPage.module.scss';\n\nexport const ContentPage = () => {\n  const { path = '', fileName = '' } = useParams<{ path?: string; fileName?: string }>();\n  const { setCurrentPart, setShowPartNav, siteNav } = useAppContext();\n\n  const navItem = apiGetNavItemByPath(path as string, siteNav);\n  const fileFullName = `/${path}/${fileName}.md`;\n\n  useEffect(() => {\n    setCurrentPart(navItem);\n    setShowPartNav(navItem.id > 0);\n  }, [navItem]);\n\n  if (navItem.id === 0) return <NotFound />;\n\n  return (\n    <div className={cls.ContentPage}>\n      <DataProvider\n        fileName={fileFullName}\n        renderContent={(data) => <Post post={data as string} />}\n      />\n    </div>\n  );\n};\n\nexport default ContentPage;\n","import React, { useEffect, useState } from 'react';\nimport { apiGetFile } from './Api';\nimport { NOT_FOUND } from 'src/constants';\nimport { Loader } from '@gravity-ui/uikit';\nimport NotFound from 'src/pages/NotFound/NotFound';\n\ninterface TypeDataProviderProps {\n  fileName: string;\n  renderContent: (data: string) => React.ReactNode;\n}\n\nexport const DataProvider = (props: TypeDataProviderProps) => {\n  const { fileName, renderContent } = props;\n  const [data, setData] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n    apiGetFile(fileName)\n      .then((res) => {\n        if (!isMounted) return;\n        if (res.err === '') {\n          setData(res.text);\n        } else {\n          setError(res.err || NOT_FOUND);\n        }\n      })\n      .catch((e) => {\n        if (isMounted) setError(String(e));\n      })\n      .finally(() => {\n        if (isMounted) setIsLoading(false);\n      });\n    return () => {\n      isMounted = false;\n    };\n  }, [fileName]);\n\n  if (isLoading) {\n    return (\n      <div style={{ textAlign: 'center', padding: 24 }}>\n        <Loader size=\"l\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    // если не прод, передаем текст ошибки\n    const isDev = process.env.NODE_ENV !== 'production';\n    return <NotFound errorMessage={isDev ? error : undefined} />;\n  }\n\n  return <>{renderContent(data)}</>;\n};\n"],"names":["NotFound","props","errorMessage","message","NOT_FOUND","_jsx","className","cls","children","_jsxs","Card","view","theme","Alert","title","Text","variant","color","Link","href","PostNavigation","heads","pageTitle","postBlockRef","length","selectedIndex","setSelectedIndex","useState","activeIndex","useActiveHeading","scrollRef","setActiveIndex","useEffect","container","current","handleScroll","offsets","map","_","idx","elem","querySelector","concat","getBoundingClientRect","top","Infinity","i","Math","abs","scrollHeight","scrollTop","clientHeight","addEventListener","passive","removeEventListener","text","index","apiGetH2Id","onClick","hljs","registerLanguage","javascript","xml","json","bash","python","Post","post","postRef","useRef","setHeads","useLayoutEffect","postElement","querySelectorAll","forEach","block","highlightElement","apiGetHeadsArray","NO_CONTENT","ref","Markdown","options","overrides","a","component","target","apiGetTitleFromPost","ContentPage","path","fileName","useParams","setCurrentPart","setShowPartNav","siteNav","useAppContext","navItem","apiGetNavItemByPath","fileFullName","id","DataProvider","renderContent","data","setData","isLoading","setIsLoading","error","setError","isMounted","apiGetFile","then","res","err","catch","e","String","finally","style","textAlign","padding","Loader","size","isDev","process","undefined","_Fragment"],"sourceRoot":""}
{"version":3,"file":"static/js/5192.73f70203.chunk.js","mappings":"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","sources":["data/helpers.ts","webpack://conspectus/./src/pages/NotFound/NotFound.module.scss?532d","pages/NotFound/NotFound.tsx","webpack://conspectus/./src/components/UI/Post/Post.module.scss?2f4f","webpack://conspectus/./src/components/UI/PostNavigation/PostNavigation.module.scss?c46f","components/UI/PostNavigation/PostNavigation.tsx","hooks/useActiveHeading.ts","webpack://conspectus/./src/components/UI/PrevNextButtons/PrevNextButtons.module.scss?d071","components/UI/PrevNextButtons/PrevButton.tsx","components/UI/PrevNextButtons/NextButton.tsx","components/UI/PrevNextButtons/PrevNexButtons.tsx","webpack://conspectus/./src/components/layout/Sidebar/Sidebar.module.scss?8301","components/layout/Sidebar/Sidebar.tsx","components/UI/Post/Post.tsx","webpack://conspectus/./src/pages/ContentPage/ContentPage.module.scss?07df","pages/ContentPage/ContentPage.tsx","data/DataProvider.tsx"],"sourcesContent":["import { BASENAME, EMPTY_LINK, IMG_MD_PATH } from 'src/constants';\nimport { TypeNavArray, TypeNavLink } from 'src/types/nav';\n\n// получаем путь к изображению для конспекта\nexport const getImgName = (mdPath: string) => `${BASENAME}${IMG_MD_PATH}${mdPath}-220.jpg`;\n\n// получаем навигационную ссылку из массива ссылок  по указанном пути\nexport const getNavItemByPath = (path: string, navArray: TypeNavArray): TypeNavLink => {\n  const seekPath = path === '' || !path.startsWith('/') ? '/' + path : path;\n\n  for (const element of navArray) {\n    if (element.path === seekPath) return element;\n  }\n  return EMPTY_LINK;\n};\n\n// получаем навигационную ссылку из массива ссылок  по id\nexport const getNavItemById = (id: number, navArray: TypeNavArray): TypeNavLink => {\n  for (const element of navArray) {\n    if (element.id === id) return element;\n  }\n  return EMPTY_LINK;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"NotFound\":\"NotFound_NotFound__IPBs5\",\"NotFoundCard\":\"NotFound_NotFoundCard__g+rwP\",\"NotFoundAlert\":\"NotFound_NotFoundAlert__0Ir1f\"};","// Не убирать default экспорт! Используется для ленивого импорта, именованный нужен для автогенерации тестов\nimport React from 'react';\nimport { Alert, Text, Card, Link } from '@gravity-ui/uikit';\nimport { NOT_FOUND } from 'src/constants';\nimport cls from './NotFound.module.scss';\n\ninterface NotFoundProps {\n  errorMessage?: string;\n}\n\nexport const NotFound = (props: NotFoundProps) => {\n  const { errorMessage } = props;\n  const message = errorMessage || NOT_FOUND;\n\n  return (\n    <div className={cls.NotFound}>\n      <Card\n        view=\"outlined\"\n        className={cls.NotFoundCard}\n        theme=\"warning\"\n      >\n        <Alert\n          theme=\"warning\"\n          title=\"Ошибка 404\"\n          message={message}\n          className={cls.NotFoundAlert}\n        />\n        <Text\n          variant=\"subheader-2\"\n          color=\"secondary\"\n        >\n          Попробуйте выбрать раздел из меню или вернуться на <Link href=\"/conspectus\">главную</Link>\n          .\n        </Text>\n      </Card>\n    </div>\n  );\n};\n\nexport default NotFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"Post\":\"Post_Post__2OxnI\",\"PostBlock\":\"Post_PostBlock__3pzc5\",\"PostBlockNav\":\"Post_PostBlockNav__MTmQs\",\"PostGrid\":\"Post_PostGrid__P+wi7\",\"PostAlert\":\"Post_PostAlert__hPyP3\"};","// extracted by mini-css-extract-plugin\nexport default {\"PostNavigation\":\"PostNavigation_PostNavigation__vV0HX\",\"active\":\"PostNavigation_active__hYYLa\"};","import React, { useState } from 'react';\n\nimport { Text, Link as GLink } from '@gravity-ui/uikit';\n\nimport cls from './PostNavigation.module.scss';\n\nimport { useActiveHeading } from 'src/hooks/useActiveHeading';\nimport { parseIdFromH2 } from 'src/data/parsers';\n\ninterface PostNavigationProps {\n  heads: string[];\n  pageTitle: string;\n  postBlockRef: React.RefObject<HTMLDivElement>;\n}\n\nexport const PostNavigation = (props: PostNavigationProps) => {\n  const { heads, pageTitle, postBlockRef } = props;\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const activeIndex = useActiveHeading(heads, postBlockRef, selectedIndex, setSelectedIndex);\n\n  if (!heads.length) return null;\n\n  return (\n    <nav\n      className={cls.PostNavigation}\n      aria-label=\"Навигация по статье\"\n    >\n      <Text\n        variant=\"subheader-2\"\n        color={'info'}\n      >\n        {pageTitle}\n      </Text>\n\n      <ul>\n        {heads.map((text, index) => (\n          <li\n            key={index + 1}\n            className={index === activeIndex ? cls.active : ''}\n          >\n            <GLink\n              href={`#${parseIdFromH2(index)}`}\n              onClick={() => setSelectedIndex(index)}\n            >\n              {text}\n            </GLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const useActiveHeading = (\n  heads: string[],\n  scrollRef: React.RefObject<HTMLElement>,\n  selectedIndex: number,\n  setSelectedIndex: (idx: number) => void\n) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  useEffect(() => {\n    const container = scrollRef.current;\n    if (!container || !heads.length) return undefined;\n\n    const handleScroll = () => {\n      // На любом скролле — сбрасываем selectedIndex\n      setSelectedIndex(-1);\n\n      //Собираем позиции заголовков относительно контейнера\n      const offsets = heads.map((_, idx) => {\n        const elem = container.querySelector(`#h2-${idx}`);\n        return elem\n          ? elem.getBoundingClientRect().top - container.getBoundingClientRect().top\n          : Infinity;\n      });\n\n      //  Находим максимальный заголовок, который не выше верха области (или близко к нему)\n      const threshold = 20; //  определяет \"насколько выше\" может быть активный раздел\n\n      let current = 0;\n      for (let i = 0; i < offsets.length; i++) {\n        if (offsets[i] - threshold <= 0) {\n          current = i;\n        }\n      }\n\n      // Если дошли до самого низа — всегда подсвечиваем последний пункт\n      if (Math.abs(container.scrollHeight - container.scrollTop - container.clientHeight) < 2) {\n        current = heads.length - 1;\n      }\n      setActiveIndex(current);\n    };\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    handleScroll();\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n    };\n  }, [heads, scrollRef, selectedIndex, setSelectedIndex]);\n\n  return selectedIndex === -1 ? activeIndex : selectedIndex;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"navCard\":\"PrevNextButtons_navCard__Ql8th\",\"prevButton\":\"PrevNextButtons_prevButton__IvWbc\",\"nextButton\":\"PrevNextButtons_nextButton__ihtH1\"};","import React from 'react';\n\nimport { ArrowToggle, Button, Text } from '@gravity-ui/uikit';\n\nimport { Link } from 'react-router-dom';\n\ninterface PrevButtonProps {\n  postPath: string;\n  postName: string;\n  className: string;\n}\nexport const PrevButton = (props: PrevButtonProps) => {\n  const { postPath, postName, className } = props;\n  return (\n    <Link\n      to={postPath}\n      className={className}\n    >\n      <Button>\n        <ArrowToggle direction=\"left\" />\n      </Button>\n      <Text\n        variant=\"subheader-1\"\n        color=\"info\"\n      >\n        {postName}\n      </Text>\n    </Link>\n  );\n};\n","import React from 'react';\n\nimport { ArrowToggle, Button, Text } from '@gravity-ui/uikit';\n\nimport { Link } from 'react-router-dom';\n\ninterface NextButtonProps {\n  postPath: string;\n  postName: string;\n  className: string;\n}\nexport const NextButton = (props: NextButtonProps) => {\n  const { postPath, postName, className } = props;\n  return (\n    <Link\n      to={postPath}\n      className={className}\n    >\n      <Text\n        variant=\"subheader-1\"\n        color=\"info\"\n      >\n        {postName}\n      </Text>\n      <Button>\n        <ArrowToggle direction=\"right\" />\n      </Button>\n    </Link>\n  );\n};\n","import React from 'react';\n\nimport { Card } from '@gravity-ui/uikit';\n\nimport cls from './PrevNextButtons.module.scss';\n\nimport { TypeNavLink } from 'src/types/nav';\n\nimport { PrevButton } from './PrevButton';\n\nimport { NextButton } from './NextButton';\n\ninterface PrevNextButtonsProps {\n  prevPost: TypeNavLink;\n  nextPost: TypeNavLink;\n}\n\nexport const PrevNextButtons = (props: PrevNextButtonsProps) => {\n  const { prevPost, nextPost } = props;\n\n  return (\n    <Card\n      type=\"container\"\n      theme=\"normal\"\n      className={cls.navCard}\n      view=\"clear\"\n    >\n      {prevPost.id > 0 && (\n        <PrevButton\n          postPath={prevPost.path}\n          postName={prevPost.name}\n          className={cls.prevButton}\n        />\n      )}\n      {nextPost.id > 0 && (\n        <NextButton\n          postPath={nextPost.path}\n          postName={nextPost.name}\n          className={cls.nextButton}\n        />\n      )}\n    </Card>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Sidebar\":\"Sidebar_Sidebar__DI9OI\"};","import React, { ReactNode } from 'react';\nimport cls from './Sidebar.module.scss';\n\ninterface SidebarProps {\n  children: ReactNode[];\n}\n\nexport const Sidebar = ({ children }: SidebarProps) => {\n  return <aside className={cls.Sidebar}>{children} </aside>;\n};\n","import 'highlight.js/scss/default.scss';\n\nimport hljs from 'highlight.js/lib/core';\nimport bash from 'highlight.js/lib/languages/bash';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport json from 'highlight.js/lib/languages/json';\nimport python from 'highlight.js/lib/languages/python';\nimport xml from 'highlight.js/lib/languages/xml';\nimport Markdown from 'markdown-to-jsx';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\n\nimport { Link, Alert } from '@gravity-ui/uikit';\n\nimport cls from './Post.module.scss';\n\nimport { PostNavigation } from 'src/components/UI/PostNavigation/PostNavigation';\nimport { NO_CONTENT } from 'src/constants';\nimport { parseHeadsArray, parseTitleFromMarkdown } from 'src/data/parsers';\nimport { TypeNavLink } from 'src/types/nav';\nimport { PrevNextButtons } from '../PrevNextButtons/PrevNexButtons';\nimport { Sidebar } from 'src/components/layout/Sidebar/Sidebar';\n\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('xml', xml);\nhljs.registerLanguage('json', json);\nhljs.registerLanguage('bash', bash);\nhljs.registerLanguage('python', python);\n\nexport interface TypePostProps {\n  post: string;\n  prevPost: TypeNavLink;\n  nextPost: TypeNavLink;\n}\n\nexport const Post = (props: TypePostProps) => {\n  const { post, prevPost, nextPost } = props;\n  const postRef = useRef<HTMLDivElement | null>(null);\n  const [heads, setHeads] = useState<Array<string>>([]);\n\n  useLayoutEffect(() => {\n    const postElement: HTMLElement | null = postRef.current;\n    if (postElement) {\n      const codeBlocks = postElement.querySelectorAll('pre code');\n      codeBlocks.forEach((block) => {\n        hljs.highlightElement(block as HTMLElement);\n      });\n      setHeads(parseHeadsArray(postElement));\n    }\n  }, [post, postRef]);\n\n  const postBlockRef = useRef<HTMLDivElement>(null);\n\n  if (!post)\n    return (\n      <Alert\n        theme=\"warning\"\n        message={NO_CONTENT}\n        className={cls.PostAlert}\n      />\n    );\n\n  return (\n    <article\n      ref={postRef}\n      className={cls.PostGrid}\n    >\n      <div\n        ref={postBlockRef}\n        className={cls.PostBlock}\n      >\n        <Markdown\n          options={{\n            overrides: {\n              a: {\n                component: Link,\n                props: {\n                  view: 'normal',\n                  target: '_blank',\n                },\n              },\n            },\n          }}\n        >\n          {post}\n        </Markdown>\n      </div>\n      <Sidebar>\n        <PostNavigation\n          heads={heads}\n          pageTitle={parseTitleFromMarkdown(post)}\n          postBlockRef={postBlockRef}\n        />\n        <PrevNextButtons\n          prevPost={prevPost}\n          nextPost={nextPost}\n        />\n      </Sidebar>\n    </article>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContentPage\":\"ContentPage_ContentPage__kqsnq\"};","// Не убирать default экспорт! Используется для ленивого импорта, именованный нужен для автогенерации тестов\n\nimport React, { useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useAppContext } from 'src/app/AppContext/AppContextProvider';\nimport { DataProvider } from 'src/data/DataProvider';\n\nimport { Post } from 'src/components/UI/Post/Post';\nimport { NotFound } from 'src/pages/NotFound/NotFound';\n\nimport cls from './ContentPage.module.scss';\nimport { getNavItemById, getNavItemByPath } from 'src/data/helpers';\n\nexport const ContentPage = () => {\n  const { path = '', fileName = '' } = useParams<{ path?: string; fileName?: string }>();\n  const { setCurrentPart, setShowPartNav, siteNav, partNavArray } = useAppContext();\n\n  const part = getNavItemByPath(path, siteNav);\n\n  const fileFullName = `/${path}/${fileName}.md`;\n\n  useEffect(() => {\n    setCurrentPart(part);\n    setShowPartNav(part.id > 0);\n  }, [part]);\n\n  const partNav = useMemo(() => partNavArray[part?.id] || [], [partNavArray, part?.id]);\n\n  if (part.id === 0) return <NotFound />;\n\n  const postItem = getNavItemByPath(`/${path}/${fileName}`, partNav);\n  const prevPostItem = getNavItemById(postItem.id - 1, partNav);\n  const nextPostItem = getNavItemById(postItem.id + 1, partNav);\n\n  return (\n    <div className={cls.ContentPage}>\n      <DataProvider\n        fileName={fileFullName}\n        renderContent={(data) => (\n          <Post\n            post={data}\n            prevPost={prevPostItem}\n            nextPost={nextPostItem}\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default ContentPage;\n","import React, { useEffect, useState } from 'react';\nimport { getFile } from './api';\n\nimport { Loader } from '@gravity-ui/uikit';\nimport NotFound from 'src/pages/NotFound/NotFound';\n\ninterface TypeDataProviderProps {\n  fileName: string;\n  renderContent: (data: string) => React.ReactNode;\n}\n\nexport const DataProvider = (props: TypeDataProviderProps) => {\n  const { fileName, renderContent } = props;\n  const [data, setData] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n\n    async function fetchData() {\n      try {\n        const text = await getFile(fileName);\n        if (isMounted) setData(text);\n      } catch (e) {\n        if (isMounted) setError(String(e));\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    }\n\n    fetchData();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [fileName]);\n\n  if (isLoading) {\n    return (\n      <div style={{ textAlign: 'center', padding: 24 }}>\n        <Loader size=\"l\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    // если не прод, передаем текст ошибки\n    const isDev = process.env.NODE_ENV !== 'production';\n    return <NotFound errorMessage={isDev ? error : undefined} />;\n  }\n\n  return <>{renderContent(data)}</>;\n};\n"],"names":["getImgName","mdPath","concat","BASENAME","IMG_MD_PATH","getNavItemByPath","path","navArray","seekPath","startsWith","element","EMPTY_LINK","getNavItemById","id","NotFound","props","errorMessage","message","NOT_FOUND","_jsx","className","cls","children","_jsxs","Card","view","theme","Alert","title","Text","variant","color","Link","href","PostNavigation","heads","pageTitle","postBlockRef","selectedIndex","setSelectedIndex","useState","activeIndex","useActiveHeading","scrollRef","setActiveIndex","useEffect","container","current","length","handleScroll","offsets","map","_","idx","elem","querySelector","getBoundingClientRect","top","Infinity","i","Math","abs","scrollHeight","scrollTop","clientHeight","addEventListener","passive","removeEventListener","text","index","GLink","parseIdFromH2","onClick","PrevButton","postPath","postName","to","Button","ArrowToggle","direction","NextButton","PrevNextButtons","prevPost","nextPost","type","name","Sidebar","_ref","hljs","registerLanguage","javascript","xml","json","bash","python","Post","post","postRef","useRef","setHeads","useLayoutEffect","postElement","querySelectorAll","forEach","block","highlightElement","parseHeadsArray","ref","Markdown","options","overrides","a","component","target","parseTitleFromMarkdown","NO_CONTENT","ContentPage","fileName","useParams","setCurrentPart","setShowPartNav","siteNav","partNavArray","useAppContext","part","fileFullName","partNav","useMemo","postItem","prevPostItem","nextPostItem","DataProvider","renderContent","data","setData","isLoading","setIsLoading","error","setError","isMounted","async","getFile","e","String","fetchData","style","textAlign","padding","Loader","size","isDev","process","undefined","_Fragment"],"sourceRoot":""}
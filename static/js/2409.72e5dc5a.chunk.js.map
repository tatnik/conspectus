{"version":3,"file":"static/js/2409.72e5dc5a.chunk.js","mappings":"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","sources":["webpack://conspectus/./src/components/UI/Post/Post.module.scss?2f4f","webpack://conspectus/./src/components/UI/PostNavigation/PostNavigation.module.scss?c46f","components/UI/PostNavigation/PostNavigation.tsx","hooks/useActiveHeading.ts","webpack://conspectus/./src/components/UI/PrevNextButtons/PrevNextButtons.module.scss?d071","components/UI/PrevNextButtons/PrevButton.tsx","components/UI/PrevNextButtons/NextButton.tsx","components/UI/PrevNextButtons/PrevNexButtons.tsx","webpack://conspectus/./src/components/layout/Sidebar/Sidebar.module.scss?8301","components/layout/Sidebar/Sidebar.tsx","components/UI/Post/Post.tsx","hooks/useScrollToHash.ts","webpack://conspectus/./src/pages/ContentPage/ContentPage.module.scss?07df","pages/ContentPage/ContentPage.tsx","webpack://conspectus/./src/pages/NotFound/NotFound.module.scss?532d","pages/NotFound/NotFound.tsx","data/DataProvider.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Post\":\"Post_Post__2OxnI\",\"PostBlock\":\"Post_PostBlock__3pzc5\",\"PostBlockNav\":\"Post_PostBlockNav__MTmQs\",\"PostGrid\":\"Post_PostGrid__P+wi7\",\"PostAlert\":\"Post_PostAlert__hPyP3\"};","// extracted by mini-css-extract-plugin\nexport default {\"PostNavigation\":\"PostNavigation_PostNavigation__vV0HX\",\"active\":\"PostNavigation_active__hYYLa\"};","import React, { useState } from 'react';\n\nimport { Text, Link as GLink } from '@gravity-ui/uikit';\n\nimport cls from './PostNavigation.module.scss';\n\nimport { useActiveHeading } from 'src/hooks/useActiveHeading';\nimport { HeadingInfo } from 'src/types/heading';\n\ninterface PostNavigationProps {\n  heads: HeadingInfo[];\n  pageTitle: string;\n  postBlockRef: React.RefObject<HTMLDivElement>;\n}\n\nexport const PostNavigation = (props: PostNavigationProps) => {\n  const { heads, pageTitle, postBlockRef } = props;\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const activeIndex = useActiveHeading(heads, postBlockRef, selectedIndex, setSelectedIndex);\n\n  if (!heads.length) return null;\n\n  return (\n    <nav\n      className={cls.PostNavigation}\n      aria-label=\"Навигация по статье\"\n    >\n      <Text\n        variant=\"subheader-2\"\n        color={'info'}\n      >\n        {pageTitle}\n      </Text>\n\n      <ul>\n        {heads.map((head, index) =>\n          head.level > 1 ? (\n            <li\n              key={head.id}\n              className={index === activeIndex ? cls.active : ''}\n              style={{ paddingLeft: (head.level - 2) * 18 }}\n            >\n              <GLink\n                href={`#${head.id}`}\n                onClick={() => setSelectedIndex(index)}\n              >\n                {head.text}\n              </GLink>\n            </li>\n          ) : null\n        )}\n      </ul>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { HeadingInfo } from 'src/types/heading';\n\nexport const useActiveHeading = (\n  heads: HeadingInfo[],\n  scrollRef: React.RefObject<HTMLElement>,\n  selectedIndex: number,\n  setSelectedIndex: (idx: number) => void\n) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  useEffect(() => {\n    const container = scrollRef.current;\n    if (!container || !heads.length) return undefined;\n\n    const handleScroll = () => {\n      // На любом скролле — сбрасываем selectedIndex\n      setSelectedIndex(-1);\n\n      //Собираем позиции заголовков относительно контейнера\n      const offsets = heads.map((head) => {\n        const elem = container.querySelector(`#${head.id}`);\n        return elem\n          ? elem.getBoundingClientRect().top - container.getBoundingClientRect().top\n          : Infinity;\n      });\n\n      //  Находим максимальный заголовок, который не выше верха области (или близко к нему)\n      const threshold = 20; //  определяет \"насколько выше\" может быть активный раздел\n\n      let current = 0;\n      for (let i = 0; i < offsets.length; i++) {\n        if (offsets[i] - threshold <= 0) {\n          current = i;\n        }\n      }\n\n      // Если дошли до самого низа — всегда подсвечиваем последний пункт\n      if (Math.abs(container.scrollHeight - container.scrollTop - container.clientHeight) < 2) {\n        current = heads.length - 1;\n      }\n      setActiveIndex(current);\n    };\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    handleScroll();\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n    };\n  }, [heads, scrollRef, selectedIndex, setSelectedIndex]);\n\n  return selectedIndex === -1 ? activeIndex : selectedIndex;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"navCard\":\"PrevNextButtons_navCard__Ql8th\",\"prevButton\":\"PrevNextButtons_prevButton__IvWbc\",\"nextButton\":\"PrevNextButtons_nextButton__ihtH1\"};","import React from 'react';\n\nimport { ArrowToggle, Button, Text } from '@gravity-ui/uikit';\n\nimport { Link } from 'react-router-dom';\n\ninterface PrevButtonProps {\n  postPath: string;\n  postName: string;\n  className: string;\n}\nexport const PrevButton = (props: PrevButtonProps) => {\n  const { postPath, postName, className } = props;\n  return (\n    <Link\n      to={postPath}\n      className={className}\n    >\n      <Button>\n        <ArrowToggle direction=\"left\" />\n      </Button>\n      <Text\n        variant=\"subheader-1\"\n        color=\"info\"\n      >\n        {postName}\n      </Text>\n    </Link>\n  );\n};\n","import React from 'react';\n\nimport { ArrowToggle, Button, Text } from '@gravity-ui/uikit';\n\nimport { Link } from 'react-router-dom';\n\ninterface NextButtonProps {\n  postPath: string;\n  postName: string;\n  className: string;\n}\nexport const NextButton = (props: NextButtonProps) => {\n  const { postPath, postName, className } = props;\n  return (\n    <Link\n      to={postPath}\n      className={className}\n    >\n      <Text\n        variant=\"subheader-1\"\n        color=\"info\"\n      >\n        {postName}\n      </Text>\n      <Button>\n        <ArrowToggle direction=\"right\" />\n      </Button>\n    </Link>\n  );\n};\n","import React from 'react';\n\nimport { Card } from '@gravity-ui/uikit';\n\nimport cls from './PrevNextButtons.module.scss';\n\nimport { TypeNavLink } from 'src/types/nav';\n\nimport { PrevButton } from './PrevButton';\n\nimport { NextButton } from './NextButton';\n\ninterface PrevNextButtonsProps {\n  prevPost: TypeNavLink;\n  nextPost: TypeNavLink;\n}\n\nexport const PrevNextButtons = (props: PrevNextButtonsProps) => {\n  const { prevPost, nextPost } = props;\n\n  return (\n    <Card\n      type=\"container\"\n      theme=\"normal\"\n      className={cls.navCard}\n      view=\"clear\"\n    >\n      {prevPost.id > 0 && (\n        <PrevButton\n          postPath={prevPost.path}\n          postName={prevPost.name}\n          className={cls.prevButton}\n        />\n      )}\n      {nextPost.id > 0 && (\n        <NextButton\n          postPath={nextPost.path}\n          postName={nextPost.name}\n          className={cls.nextButton}\n        />\n      )}\n    </Card>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Sidebar\":\"Sidebar_Sidebar__DI9OI\"};","import React, { ReactNode } from 'react';\nimport cls from './Sidebar.module.scss';\n\ninterface SidebarProps {\n  children: ReactNode[];\n}\n\nexport const Sidebar = ({ children }: SidebarProps) => {\n  return <aside className={cls.Sidebar}>{children} </aside>;\n};\n","import 'highlight.js/scss/default.scss';\n\nimport hljs from 'highlight.js/lib/core';\nimport bash from 'highlight.js/lib/languages/bash';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport json from 'highlight.js/lib/languages/json';\nimport python from 'highlight.js/lib/languages/python';\nimport xml from 'highlight.js/lib/languages/xml';\nimport Markdown from 'markdown-to-jsx';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\n\nimport { Link, Alert } from '@gravity-ui/uikit';\n\nimport cls from './Post.module.scss';\n\nimport { parseHeadingsFromHtml, parseTitleFromMarkdown } from 'src/utils/parsers';\nimport { PostNavigation } from 'src/components/UI/PostNavigation/PostNavigation';\nimport { NO_CONTENT } from 'src/constants';\n\nimport { TypeNavLink } from 'src/types/nav';\nimport { PrevNextButtons } from '../PrevNextButtons/PrevNexButtons';\nimport { Sidebar } from 'src/components/layout/Sidebar/Sidebar';\nimport { HeadingInfo } from 'src/types/heading';\nimport { useScrollToHash } from 'src/hooks/useScrollToHash';\n\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('xml', xml);\nhljs.registerLanguage('json', json);\nhljs.registerLanguage('bash', bash);\nhljs.registerLanguage('python', python);\n\nexport interface TypePostProps {\n  post: string;\n  prevPost: TypeNavLink;\n  nextPost: TypeNavLink;\n}\n\nexport const Post = (props: TypePostProps) => {\n  const { post, prevPost, nextPost } = props;\n  const postRef = useRef<HTMLDivElement | null>(null);\n  const [heads, setHeads] = useState<HeadingInfo[]>([]);\n\n  useLayoutEffect(() => {\n    const postElement: HTMLElement | null = postRef.current;\n    if (postElement) {\n      const codeBlocks = postElement.querySelectorAll('pre code');\n      codeBlocks.forEach((block) => {\n        hljs.highlightElement(block as HTMLElement);\n      });\n      setHeads(parseHeadingsFromHtml(postElement));\n    }\n  }, [post, postRef]);\n\n  const postBlockRef = useRef<HTMLDivElement>(null);\n\n  useScrollToHash([post]);\n\n  if (!post)\n    return (\n      <Alert\n        theme=\"warning\"\n        message={NO_CONTENT}\n        className={cls.PostAlert}\n      />\n    );\n\n  return (\n    <article\n      ref={postRef}\n      className={cls.PostGrid}\n    >\n      <div\n        ref={postBlockRef}\n        className={cls.PostBlock}\n      >\n        <Markdown\n          options={{\n            overrides: {\n              a: {\n                component: Link,\n                props: {\n                  view: 'normal',\n                  target: '_blank',\n                },\n              },\n            },\n          }}\n        >\n          {post}\n        </Markdown>\n      </div>\n      <Sidebar>\n        <PostNavigation\n          heads={heads}\n          pageTitle={parseTitleFromMarkdown(post)}\n          postBlockRef={postBlockRef}\n        />\n        <PrevNextButtons\n          prevPost={prevPost}\n          nextPost={nextPost}\n        />\n      </Sidebar>\n    </article>\n  );\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport function useScrollToHash(deps: any[] = []) {\n  const { hash } = useLocation();\n\n  useEffect(() => {\n    if (!hash) return;\n\n    // Даем время на рендер markdown\n    setTimeout(() => {\n      const id = decodeURIComponent(hash.replace('#', ''));\n\n      const el = document.getElementById(id);\n      if (el) {\n        el.scrollIntoView({ behavior: 'smooth', block: 'start' });\n      }\n    }, 100); // задержка нужна, чтобы markdown успел отрисоваться\n    // eslint-disable-next-line\n  }, [hash, ...deps]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"ContentPage\":\"ContentPage_ContentPage__kqsnq\"};","// Не убирать default экспорт! Используется для ленивого импорта, именованный нужен для автогенерации тестов\n\nimport React, { useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useAppContext } from 'src/app/AppContext/AppContextProvider';\nimport { DataProvider } from 'src/data/DataProvider';\n\nimport { Post } from 'src/components/UI/Post/Post';\nimport { NotFound } from 'src/pages/NotFound/NotFound';\n\nimport cls from './ContentPage.module.scss';\nimport { getNavItemById, getNavItemByPath } from 'src/utils/helpers';\n\nexport const ContentPage = () => {\n  const { path = '', fileName = '' } = useParams<{ path?: string; fileName?: string }>();\n  const { setCurrentPart, setShowPartNav, siteNav, partNavArray } = useAppContext();\n\n  const part = getNavItemByPath(path, siteNav);\n\n  const fileFullName = `/${path}/${fileName}.md`;\n\n  useEffect(() => {\n    setCurrentPart(part);\n    setShowPartNav(part.id > 0);\n  }, [part]);\n\n  const partNav = useMemo(() => partNavArray[part?.id] || [], [partNavArray, part?.id]);\n\n  if (part.id === 0) return <NotFound />;\n\n  const postItem = getNavItemByPath(`/${path}/${fileName}`, partNav);\n  const prevPostItem = getNavItemById(postItem.id - 1, partNav);\n  const nextPostItem = getNavItemById(postItem.id + 1, partNav);\n\n  return (\n    <div className={cls.ContentPage}>\n      <DataProvider\n        fileName={fileFullName}\n        renderContent={(data) => (\n          <Post\n            post={data}\n            prevPost={prevPostItem}\n            nextPost={nextPostItem}\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default ContentPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"NotFound\":\"NotFound_NotFound__IPBs5\",\"NotFoundCard\":\"NotFound_NotFoundCard__g+rwP\",\"NotFoundAlert\":\"NotFound_NotFoundAlert__0Ir1f\"};","// Не убирать default экспорт! Используется для ленивого импорта, именованный нужен для автогенерации тестов\nimport React from 'react';\nimport { Alert, Text, Card, Link } from '@gravity-ui/uikit';\nimport { NOT_FOUND } from 'src/constants';\nimport cls from './NotFound.module.scss';\n\ninterface NotFoundProps {\n  errorMessage?: string;\n}\n\nexport const NotFound = (props: NotFoundProps) => {\n  const { errorMessage } = props;\n  const message = errorMessage || NOT_FOUND;\n\n  return (\n    <div className={cls.NotFound}>\n      <Card\n        view=\"outlined\"\n        className={cls.NotFoundCard}\n        theme=\"warning\"\n      >\n        <Alert\n          theme=\"warning\"\n          title=\"Ошибка 404\"\n          message={message}\n          className={cls.NotFoundAlert}\n        />\n        <Text\n          variant=\"subheader-2\"\n          color=\"secondary\"\n        >\n          Попробуйте выбрать раздел из меню или вернуться на <Link href=\"/conspectus\">главную</Link>\n          .\n        </Text>\n      </Card>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { useEffect, useState } from 'react';\nimport { getFile } from './api';\n\nimport { Loader } from '@gravity-ui/uikit';\nimport NotFound from 'src/pages/NotFound/NotFound';\n\ninterface TypeDataProviderProps {\n  fileName: string;\n  renderContent: (data: string) => React.ReactNode;\n}\n\nexport const DataProvider = (props: TypeDataProviderProps) => {\n  const { fileName, renderContent } = props;\n  const [data, setData] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n\n    async function fetchData() {\n      try {\n        const text = await getFile(fileName);\n        if (isMounted) setData(text);\n      } catch (e) {\n        if (isMounted) setError(String(e));\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    }\n\n    fetchData();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [fileName]);\n\n  if (isLoading) {\n    return (\n      <div style={{ textAlign: 'center', padding: 24 }}>\n        <Loader size=\"l\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    // если не прод, передаем текст ошибки\n    const isDev = process.env.NODE_ENV !== 'production';\n    return <NotFound errorMessage={isDev ? error : undefined} />;\n  }\n\n  return <>{renderContent(data)}</>;\n};\n"],"names":["PostNavigation","props","heads","pageTitle","postBlockRef","selectedIndex","setSelectedIndex","useState","activeIndex","useActiveHeading","scrollRef","setActiveIndex","useEffect","container","current","length","handleScroll","offsets","map","head","elem","querySelector","concat","id","getBoundingClientRect","top","Infinity","i","Math","abs","scrollHeight","scrollTop","clientHeight","addEventListener","passive","removeEventListener","_jsxs","className","cls","children","_jsx","Text","variant","color","index","level","style","paddingLeft","GLink","href","onClick","text","PrevButton","postPath","postName","Link","to","Button","ArrowToggle","direction","NextButton","PrevNextButtons","prevPost","nextPost","Card","type","theme","view","path","name","Sidebar","_ref","hljs","registerLanguage","javascript","xml","json","bash","python","Post","post","postRef","useRef","setHeads","useLayoutEffect","postElement","querySelectorAll","forEach","block","highlightElement","parseHeadingsFromHtml","deps","arguments","undefined","hash","useLocation","setTimeout","decodeURIComponent","replace","el","document","getElementById","scrollIntoView","behavior","useScrollToHash","ref","Markdown","options","overrides","a","component","target","parseTitleFromMarkdown","Alert","message","NO_CONTENT","ContentPage","fileName","useParams","setCurrentPart","setShowPartNav","siteNav","partNavArray","useAppContext","part","getNavItemByPath","fileFullName","partNav","useMemo","NotFound","postItem","prevPostItem","getNavItemById","nextPostItem","DataProvider","renderContent","data","errorMessage","NOT_FOUND","title","setData","isLoading","setIsLoading","error","setError","isMounted","async","getFile","e","String","fetchData","textAlign","padding","Loader","size","isDev","process","_Fragment"],"sourceRoot":""}
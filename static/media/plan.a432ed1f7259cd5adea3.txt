 План конспектов по Python

    Базовые сведения
    (Готово)

    Переменные и типы данных
    (Готово)

    Операторы и выражения

        Арифметические, логические, сравнения, присваивания

        Операторы принадлежности (in), тождественности (is)

        Приоритет операторов

    Ввод и вывод данных

        input(), print()

        Форматирование строк (f-строки, .format(), %)

    Условные конструкции

        if, elif, else

        Вложенные условия

    Циклы

        for, while

        Операторы break, continue, else для циклов

        range(), enumerate(), zip()

    Работа со строками

        Основные методы строк

        Срезы, конкатенация, split/join

    Списки и кортежи

        Создание, индексация, методы

        Вложенные структуры

        Генераторы списков

    Словари и множества

        Основные операции

        Методы dict, set

    Функции

        Объявление и вызов

        Аргументы по умолчанию, *args, **kwargs

        Области видимости (global, nonlocal)

        Лямбда-функции

    Модули и пакеты

        import, from ... import

        pip и установка внешних пакетов

    Обработка ошибок

        try, except, else, finally

        Собственные исключения

    Файлы

        Открытие, чтение, запись, контекстный менеджер (with)

    Классы и основы ООП

        Определение класса, конструктор init

        Методы, self

        Наследование, полиморфизм, инкапсуляция

    Работа с датой и временем

        Модуль datetime

    Встроенные функции, map/filter/reduce/sorted

        Введение в функциональный стиль

    Списковые включения (list comprehensions), генераторы

    Работа с внешними библиотеками

        Примеры: requests, matplotlib, pandas (введение)



Итераторы и генераторы

    Протокол итераторов

    Создание своих итераторов

    Генераторные функции (yield)

    Ленивые вычисления

Декораторы

    Функции-декораторы

    Декораторы с параметрами

    Стандартные декораторы (@staticmethod, @classmethod, @property)

Контекстные менеджеры

    Класс с методами __enter__ и __exit__

    Контекстные менеджеры через contextlib

Многопоточность и мультипроцессорность

    Потоки (модуль threading)

    Процессы (multiprocessing)

    Очереди и синхронизация

Асинхронное программирование

    Коррутины, async/await

    Модуль asyncio

    Асинхронные библиотеки: aiohttp, aiogram

Регулярные выражения

    Поиск, замена, валидация данных

    Модуль re

Модули и пакетирование проектов

    Создание своих пакетов для PyPI

    setup.py и pyproject.toml

Тестирование

    unittest и pytest

    Мокирование, фикстуры, параметризация тестов

Документирование кода

    Докстринги, автогенерация документации (Sphinx, pdoc)

Работа с сетью

    Сокеты (TCP/UDP)

    HTTP-серверы на базе стандартных библиотек

Работа с базами данных

    SQLite, PostgreSQL, MySQL

    ORM: SQLAlchemy, peewee

Сериализация и парсинг данных

    Форматы JSON, YAML, XML, pickle

    marshmallow и pydantic

Метапрограммирование

    Работа с функциями как с объектами

    Встроенные функции (getattr, setattr, hasattr)

    Модули inspect, abc, собственные метаклассы

Встраивание C/C++ и использование Cython

    Ускорение кода через Cython

    Связывание с C-библиотеками (ctypes, cffi)

Работа с изображениями и видео

    Библиотеки: Pillow (PIL), OpenCV

Веб-разработка

    Фреймворки Flask, FastAPI, Django

    REST API

GUI-разработка

    Tkinter, PyQt, Kivy

Машинное обучение и Data Science

    NumPy, SciPy, Pandas, Scikit-learn, TensorFlow, PyTorch

Визуализация данных

    seaborn, plotly, bokeh

Интернационализация и локализация

    Перевод программ, i18n, l10n
